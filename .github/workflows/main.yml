name: Node.js CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  EC2_HOST: ${{ secrets.EC2_HOST }}
  EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
  EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20.x'

    - name: Install dependencies
      run: npm i

    # - name: Run tests
      # run: npm test
      env:
        PORT: ${{ secrets.PORT }}
        ALLOWED_ORIGINS: ${{ secrets.ALLOWED_ORIGINS }}
        MONGODB_URI: ${{ secrets.MONGODB_URI }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}
        GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
        GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
        EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
        EMAIL_USER: ${{ secrets.EMAIL_USER }}
        EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
        TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
        TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
        TWILIO_SERVICE_SID: ${{ secrets.TWILIO_SERVICE_SID }}
        TWILIO_PHONE_NUMBER: ${{ secrets.TWILIO_PHONE_NUMBER }}
        FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
        ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
        ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}

    - name: Create .env file
      run: |
        cat << EOF > .env
        PORT=\${{ secrets.PORT }}
        ALLOWED_ORIGINS=\${{ secrets.ALLOWED_ORIGINS }}
        MONGODB_URI=\${{ secrets.MONGODB_URI }}
        AWS_REGION=\${{ secrets.AWS_REGION }}
        AWS_ACCESS_KEY_ID=\${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY=\${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_S3_BUCKET_NAME=\${{ secrets.AWS_S3_BUCKET_NAME }}
        GOOGLE_CLIENT_ID=\${{ secrets.GOOGLE_CLIENT_ID }}
        GOOGLE_CLIENT_SECRET=\${{ secrets.GOOGLE_CLIENT_SECRET }}
        EMAIL_HOST=\${{ secrets.EMAIL_HOST }}
        EMAIL_PORT=\${{ secrets.EMAIL_PORT }}
        EMAIL_USER=\${{ secrets.EMAIL_USER }}
        EMAIL_PASS=\${{ secrets.EMAIL_PASS }}
        TWILIO_ACCOUNT_SID=\${{ secrets.TWILIO_ACCOUNT_SID }}
        TWILIO_AUTH_TOKEN=\${{ secrets.TWILIO_AUTH_TOKEN }}
        TWILIO_SERVICE_SID=\${{ secrets.TWILIO_SERVICE_SID }}
        TWILIO_PHONE_NUMBER=\${{ secrets.TWILIO_PHONE_NUMBER }}
        FRONTEND_URL=\${{ secrets.FRONTEND_URL }}
        JWT_SECRET=\${{ secrets.JWT_SECRET }}
        SESSION_SECRET=\${{ secrets.SESSION_SECRET }}
        ADMIN_EMAIL=\${{ secrets.ADMIN_EMAIL }}
        ADMIN_USERNAME=\${{ secrets.ADMIN_USERNAME }}
        EOF

    - name: Deploy to EC2
      run: |
        # Write the SSH key to a file
        echo "${{ secrets.EC2_SSH_KEY }}" > deploy_key
        chmod 600 deploy_key
        
        # Create the deployment script
        cat << 'EOF' > deploy.sh
        #!/bin/bash
        cd /home/ubuntu/Server
        pm2 stop all
        git pull origin main
        npm install
        pm2 start npm --name "app" -- start
        EOF
        
        # Copy files to EC2
        scp -i deploy_key -o StrictHostKeyChecking=no .env ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/ubuntu/Server/
        scp -i deploy_key -o StrictHostKeyChecking=no deploy.sh ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/ubuntu/Server/
        
        # Execute deployment script
        ssh -i deploy_key -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} 'bash /home/ubuntu/Server/deploy.sh'